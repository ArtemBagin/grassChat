version: '3.7'

services:
  db:
    image: postgres:15
    container_name: grass_postgres
    restart: always
    networks:
      - djangonetwork
    volumes:
      - pgdata:/var/lib/postgresql/data
    env_file: .env
  web:
    build:
      context: .
    restart: unless-stopped
    command: >
      sh -c "sleep 5 && \
             python manage.py migrate && \
             python manage.py collectstatic --no-input && \
             gunicorn grass.wsgi:application --bind 0.0.0.0:8000"
    env_file: .env
    expose:
      - 8000
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/media
    depends_on:
      - db
    links:
      - db:db
    networks:
      - djangonetwork
  nginx:
    build: ./nginx
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/media
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    ports:
      - "80:80"
      - "443:443"
    links:
      - web:web
    depends_on:
      - web
    networks:
      - djangonetwork
  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - djangonetwork

networks:
    djangonetwork:
        driver: bridge

volumes:
  pgdata:
  static_volume:
  media_volume: